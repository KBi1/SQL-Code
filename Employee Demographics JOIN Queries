/* **********************************************************************************************
 * SQL Queries for Employee Demographics and Salary Details
 * Includes examples for INNER JOIN, LEFT JOIN, RIGHT JOIN, and FULL JOIN operations
 ********************************************************************************************** */

-- INNER JOIN: Retrieves only matching records from both tables
SELECT *
FROM employee_demographics AS ed
INNER JOIN employee_salary_details AS esd
ON ed.Employee_ID = esd.Employee_ID;

-- LEFT JOIN: Retrieves all records from employee_demographics, with matching records from employee_salary_details
SELECT *
FROM employee_demographics AS ed
LEFT JOIN employee_salary_details AS esd
ON ed.Employee_ID = esd.Employee_ID;

-- RIGHT JOIN: Retrieves all records from employee_salary_details, with matching records from employee_demographics
SELECT *
FROM employee_demographics AS ed
RIGHT JOIN employee_salary_details AS esd
ON ed.Employee_ID = esd.Employee_ID;

-- FULL JOIN simulation using UNION (for databases that do not support FULL JOIN)
SELECT *
FROM employee_demographics AS ed
LEFT JOIN employee_salary_details AS esd
ON ed.Employee_ID = esd.Employee_ID

UNION 

SELECT *
FROM employee_demographics AS ed
RIGHT JOIN employee_salary_details AS esd
ON ed.Employee_ID = esd.Employee_ID;


-- FULL JOIN: Returns all rows from both tables, with NULL values for missing matches on either side.
-- Note: If FULL JOIN is supported, you can use the following query instead
-- SELECT * FROM employee_demographics AS ed
-- FULL JOIN employee_salary_details AS esd
-- ON ed.Employee_ID = esd.Employee_ID;


Summary:
- INNER JOIN: Returns only the rows that have matching values in both tables.
- LEFT JOIN: Returns all rows from the left table, along with matching rows from the right table (and NULL for missing values from the right table).
- RIGHT JOIN: Returns all rows from the right table, along with matching rows from the left table (and NULL for missing values from the left table).
- UNION: Combines results from multiple queries, removing duplicates. Useful for simulating a FULL JOIN in databases that donâ€™t support it.
- FULL JOIN: Returns all rows from both tables, with NULL values for missing matches on either side. (Not supported in some databases like MySQL).


