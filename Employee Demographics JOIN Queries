/**********************************************************************************************
 * SQL Queries for Employee Demographics and Salary Details
 * Demonstrates INNER JOIN, LEFT JOIN, RIGHT JOIN, FULL JOIN (simulated using UNION), and more
 **********************************************************************************************/

-- ============================================
-- INNER JOIN: Retrieves only matching records from both tables
-- ============================================

SELECT *
FROM employee_demographics AS ed
INNER JOIN employee_salary_details AS esd
ON ed.Employee_ID = esd.Employee_ID;


-- ============================================
-- Example: SELECT specific columns using INNER JOIN
-- ============================================

SELECT ed.Employee_ID, First_Name, Job_Title, Salary
FROM employee_demographics AS ed
INNER JOIN employee_salary_details AS esd
ON ed.Employee_ID = esd.Employee_ID;


-- ============================================
-- LEFT JOIN: Retrieves all records from employee_demographics
-- ============================================
-- Matching records from employee_salary_details are included
-- (NULL values appear for non-matching rows)

SELECT *
FROM employee_demographics AS ed
LEFT JOIN employee_salary_details AS esd
ON ed.Employee_ID = esd.Employee_ID;


-- ============================================
-- RIGHT JOIN: Retrieves all records from employee_salary_details
-- ============================================
-- Matching records from employee_demographics are included
-- (NULL values appear for non-matching rows)

SELECT *
FROM employee_demographics AS ed
RIGHT JOIN employee_salary_details AS esd
ON ed.Employee_ID = esd.Employee_ID;


-- ============================================
-- FULL JOIN Simulation using UNION ALL
-- ============================================
-- Combines all records from both tables, including non-matching rows
-- UNION ALL is used to include duplicates (if any)

SELECT *
FROM employee_demographics AS ed
LEFT JOIN employee_salary_details AS esd
ON ed.Employee_ID = esd.Employee_ID

UNION ALL

SELECT *
FROM employee_demographics AS ed
RIGHT JOIN employee_salary_details AS esd
ON ed.Employee_ID = esd.Employee_ID;


-- ============================================
-- Simulate FULL JOIN using UNION
-- ============================================
-- LEFT JOIN: Gets all rows from `employee_demographics` and matching rows from `employee_salary_details`.
--   - If no match, `employee_salary_details` columns will show NULL.
-- RIGHT JOIN: Gets all rows from `employee_salary_details` and matching rows from `employee_demographics`.
--   - If no match, `employee_demographics` columns will show NULL.
-- UNION: Combines both results and removes duplicates.

SELECT *
FROM employee_demographics AS ed
LEFT JOIN employee_salary_details AS esd
ON ed.Employee_ID = esd.Employee_ID

UNION

SELECT *
FROM employee_demographics AS ed
RIGHT JOIN employee_salary_details AS esd
ON ed.Employee_ID = esd.Employee_ID;


-- ============================================
-- FULL JOIN (if supported)
-- ============================================
-- Returns all rows from both tables, with NULL values for missing matches on either side.
/*
SELECT *
FROM employee_demographics AS ed
FULL JOIN employee_salary_details AS esd
ON ed.Employee_ID = esd.Employee_ID;
*/


-- ============================================
-- Filtering and Sorting with INNER JOIN
-- ============================================
-- Example: Retrieve employee details excluding a specific name and sort by salary (descending)

SELECT ed.Employee_ID, First_Name, Last_Name, Job_Title, Salary
FROM employee_demographics AS ed
INNER JOIN employee_salary_details AS esd
ON ed.Employee_ID = esd.Employee_ID
WHERE First_Name <> 'Michael'
ORDER BY Salary DESC;


-- ============================================
-- Aggregation with INNER JOIN
-- ============================================
-- Example: Calculate the average salary for a specific job title

SELECT Job_Title, AVG(Salary) AS Average_Salary
FROM employee_demographics AS ed
INNER JOIN employee_salary_details AS esd
ON ed.Employee_ID = esd.Employee_ID
WHERE Job_Title = 'Salesman'
GROUP BY Job_Title;


 /**********************************************************************************************
 * Summary of Join Types
 **********************************************************************************************
 * - INNER JOIN: Returns only the rows that have matching values in both tables.
 * - LEFT JOIN: Returns all rows from the left table, along with matching rows from the right table (NULL for missing values from the right table).
 * - RIGHT JOIN: Returns all rows from the right table, along with matching rows from the left table (NULL for missing values from the left table).
 * - FULL JOIN: Returns all rows from both*
